-- ===========================================
-- Common Table Expressions (CTEs)
-- ===========================================
-- These are non-recursive CTEs used to prepare reusable logic
-- for calculating total sales, last order dates, customer ranking,
-- and customer segmentation.

-- Step 1: Calculate total sales per customer
WITH CTE_TotalSales AS (
    SELECT 
        CustomerID,
        SUM(Sales) AS TotalSales
    FROM Sales.Orders
    GROUP BY CustomerID
),

-- Step 2: Get the last order date for each customer
CTE_LastOrder AS (
    SELECT 
        CustomerID,
        MAX(OrderDate) AS LastOrder
    FROM Sales.Orders
    GROUP BY CustomerID
),

-- Step 3: Rank customers based on total sales
CTE_Customer_Rank AS (
    SELECT 
        CustomerID,
        TotalSales,
        RANK() OVER (ORDER BY TotalSales DESC) AS CustomerRank
    FROM CTE_TotalSales
),

-- Step 4: Segment customers based on total sales
CTE_Customer_Segments AS (
    SELECT 
        CustomerID,
        TotalSales,
        CASE 
            WHEN TotalSales > 100 THEN 'High'
            WHEN TotalSales > 50 THEN 'Medium'
            ELSE 'Low'
        END AS CustomerSegments
    FROM CTE_TotalSales
)

-- ===========================================
-- Final Query: Join all CTEs with Customers
-- ===========================================
SELECT 
    c.CustomerID,
    c.FirstName,
    c.LastName,
    cts.TotalSales,
    clo.LastOrder,
    ccr.CustomerRank,
    ccs.CustomerSegments
FROM Sales.Customers c
LEFT JOIN CTE_TotalSales cts ON cts.CustomerID = c.CustomerID
LEFT JOIN CTE_LastOrder clo ON clo.CustomerID = c.CustomerID
LEFT JOIN CTE_Customer_Rank ccr ON ccr.CustomerID = c.CustomerID
LEFT JOIN CTE_Customer_Segments ccs ON ccs.CustomerID = c.CustomerID;
